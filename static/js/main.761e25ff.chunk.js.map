{"version":3,"sources":["logo.svg","components/Country/Country.js","components/CountryList/CountryList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","stats","className","src","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","countries","a","fetch","resp","json","this","forEach","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAAe,I,kBCiBAA,EAfC,SAAC,GAAW,IAAVC,EAAS,EAATA,MAEd,OACA,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,sCAAiCF,EAAMG,YAAvC,gBAAkEC,IAAKJ,EAAMD,UACrF,mCAAMC,EAAMD,WACZ,sBAAKE,UAAU,OAAf,UACI,8CAAeD,EAAMK,UACrB,iDAAkBL,EAAMM,aACxB,8CAAeN,EAAMO,UACrB,iDAAkBP,EAAMQ,oBCCrBC,G,MAVK,SAAC,GAAY,IAAXT,EAAU,EAAVA,MAClB,OACI,qBAAKC,UAAU,cAAf,SAEKD,EAAMU,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAoCX,MAAOW,GAA5BA,EAAQR,oBCC1CS,EALG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAC5B,OACI,uBAAOC,KAAK,SAASd,UAAU,SAASY,YAAaA,EAAaG,SAAUF,KC0CrEG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAqBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SArBpC,EAAKC,MAAQ,CACXC,UAAU,GACVxB,MAAM,GACNoB,YAAY,IALF,E,4FAQd,qCAAAK,EAAA,sEACqBC,MAAM,wCAD3B,cACQC,EADR,gBAE0BA,EAAKC,OAF/B,OAEQJ,EAFR,OAGEK,KAAKV,SAAS,CAACK,cACfK,KAAKN,MAAMC,UAAUM,QAArB,uCAA6B,WAAMnB,GAAN,iBAAAc,EAAA,sEACRC,MAAM,4CAAD,OAA6Cf,EAAQoB,OADlD,cACrBJ,EADqB,gBAERA,EAAKC,OAFG,QAErBI,EAFqB,QAGhBC,QACX,EAAKd,UAAS,SAAAe,GAAS,MACrB,CAAClC,MAAMkC,EAAUlC,MAAMmC,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAQ,IAA7C,IAAgD9B,YAAYQ,EAAQyB,YALlD,2CAA7B,kCAAAP,KAAA,gBAJF,gD,0EAiBA,WACE,MAA4BA,KAAKN,MAA1BvB,EAAP,EAAOA,MAAMoB,EAAb,EAAaA,YACPiB,EAAoBrC,EAAMsC,QAAO,SAAA3B,GAAO,OAC5CA,EAAQZ,QAAQwC,cAAcC,SAASpB,EAAYmB,kBAErD,OACM,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,CAAWY,YAAY,yBACXC,aAAce,KAAKf,eAC/B,cAAC,EAAD,CAAad,MAAQqC,W,GAnCfI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.761e25ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport  './country.css' ;   \r\nconst Country = ({stats})=>{\r\n\r\n    return (\r\n    <div className='country'>\r\n        <img src={`https://www.countryflags.io/${stats.CountryCode}/flat/64.png`} alt={stats.Country} ></img>\r\n        <h2> {stats.Country}</h2>\r\n        <div className='desc'>\r\n            <p>{`Active :${stats.Active}`}</p>\r\n            <p>{`Confirmed :${stats.Confirmed}`}</p>\r\n            <p>{`Deaths :${stats.Deaths}`}</p>\r\n            <p>{`Recovered :${stats.Recovered}`}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Country;","import React from 'react';\r\nimport Country from '../Country/Country';\r\nimport './countrylist.css';\r\nconst CountryList = ({stats}) =>{\r\n    return (\r\n        <div className='countrylist'>\r\n            {\r\n             stats.map(country => <Country  key={country.CountryCode} stats={country}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({placeholder,handleChange}) => {\r\n    return (\r\n        <input type='search' className='search' placeholder={placeholder} onChange={handleChange}/>\r\n    )\r\n}\r\nexport default SearchBox;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport CountryList from './components/CountryList/CountryList';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nclass App extends React.Component{\n  constructor (){\n    super();\n    this.state = {\n      countries:[],\n      stats:[],\n      searchField:''\n    }\n  }\n  async componentDidMount(){\n    const resp = await fetch('https://api.covid19api.com/countries')\n    const countries = await resp.json()\n    this.setState({countries})\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`)\n      const data = await resp.json()\n        if (data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length -1],CountryCode:country.ISO2})}\n      ))  \n    })\n\n  }\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value})\n  }\n  render (){\n    const {stats,searchField} = this.state\n    const filteredCountries = stats.filter(country =>(\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return (\n          <div className=\"App\">\n            <SearchBox placeholder=\"Enter country name ...\"\n                        handleChange={this.handleChange}/>\n            <CountryList stats ={filteredCountries}/>\n           </div>\n        )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}